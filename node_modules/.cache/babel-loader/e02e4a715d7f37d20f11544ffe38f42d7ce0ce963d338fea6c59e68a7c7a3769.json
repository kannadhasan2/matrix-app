{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/matrix-3x3-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleBoxClick = index => {\n      const {\n        colors,\n        clickCount,\n        clickOrder\n      } = this.state;\n      if (colors[index] === \"white\") {\n        colors[index] = \"green\"; // Change the clicked box to green\n        clickOrder.push(index); // Add this box index to the click order\n\n        this.setState({\n          colors: colors,\n          clickCount: clickCount + 1\n        });\n        if (clickCount + 1 === 9) {\n          this.changeAllBoxesToOrange();\n        }\n      }\n    };\n    this.changeAllBoxesToOrange = () => {\n      const {\n        colors,\n        clickOrder\n      } = this.state;\n      for (let i = 0; i < clickOrder.length; i++) {\n        const index = clickOrder[i];\n        setTimeout(() => {\n          colors[index] = \"orange\";\n          this.setState({\n            colors: colors\n          });\n        }, i * 500); // Change each box to orange in sequence with delay\n      }\n    };\n    this.state = {\n      colors: [\"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\"],\n      // Array to track the colors of each box\n      clickCount: 0,\n      // Counter to track the number of clicks\n      clickOrder: [] // Array to track the order of clicks\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matrix\",\n      children: this.state.colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        style: {\n          backgroundColor: color\n        },\n        onClick: () => this.handleBoxClick(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","App","constructor","props","handleBoxClick","index","colors","clickCount","clickOrder","state","push","setState","changeAllBoxesToOrange","i","length","setTimeout","render","className","children","map","color","style","backgroundColor","onClick","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/workspace/reactjs/coding-practices/matrix-3x3-app/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      colors: [\n        \"white\",\n        \"white\",\n        \"white\",\n        \"white\",\n        \"white\",\n        \"white\",\n        \"white\",\n        \"white\",\n        \"white\",\n      ], // Array to track the colors of each box\n      clickCount: 0, // Counter to track the number of clicks\n      clickOrder: [], // Array to track the order of clicks\n    };\n  }\n\n  handleBoxClick = (index) => {\n    const { colors, clickCount, clickOrder } = this.state;\n\n    if (colors[index] === \"white\") {\n      colors[index] = \"green\"; // Change the clicked box to green\n      clickOrder.push(index); // Add this box index to the click order\n\n      this.setState({\n        colors: colors,\n        clickCount: clickCount + 1,\n      });\n\n      if (clickCount + 1 === 9) {\n        this.changeAllBoxesToOrange();\n      }\n    }\n  };\n\n  changeAllBoxesToOrange = () => {\n    const { colors, clickOrder } = this.state;\n\n    for (let i = 0; i < clickOrder.length; i++) {\n      const index = clickOrder[i];\n      setTimeout(() => {\n        colors[index] = \"orange\";\n        this.setState({ colors: colors });\n      }, i * 500); // Change each box to orange in sequence with delay\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"matrix\">\n        {this.state.colors.map((color, index) => (\n          <div\n            key={index}\n            className=\"box\"\n            style={{ backgroundColor: color }}\n            onClick={() => this.handleBoxClick(index)}\n          ></div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,SAASH,SAAS,CAAC;EAC1BI,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAkBfC,cAAc,GAAIC,KAAK,IAAK;MAC1B,MAAM;QAAEC,MAAM;QAAEC,UAAU;QAAEC;MAAW,CAAC,GAAG,IAAI,CAACC,KAAK;MAErD,IAAIH,MAAM,CAACD,KAAK,CAAC,KAAK,OAAO,EAAE;QAC7BC,MAAM,CAACD,KAAK,CAAC,GAAG,OAAO,CAAC,CAAC;QACzBG,UAAU,CAACE,IAAI,CAACL,KAAK,CAAC,CAAC,CAAC;;QAExB,IAAI,CAACM,QAAQ,CAAC;UACZL,MAAM,EAAEA,MAAM;UACdC,UAAU,EAAEA,UAAU,GAAG;QAC3B,CAAC,CAAC;QAEF,IAAIA,UAAU,GAAG,CAAC,KAAK,CAAC,EAAE;UACxB,IAAI,CAACK,sBAAsB,CAAC,CAAC;QAC/B;MACF;IACF,CAAC;IAAA,KAEDA,sBAAsB,GAAG,MAAM;MAC7B,MAAM;QAAEN,MAAM;QAAEE;MAAW,CAAC,GAAG,IAAI,CAACC,KAAK;MAEzC,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,UAAU,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;QAC1C,MAAMR,KAAK,GAAGG,UAAU,CAACK,CAAC,CAAC;QAC3BE,UAAU,CAAC,MAAM;UACfT,MAAM,CAACD,KAAK,CAAC,GAAG,QAAQ;UACxB,IAAI,CAACM,QAAQ,CAAC;YAAEL,MAAM,EAAEA;UAAO,CAAC,CAAC;QACnC,CAAC,EAAEO,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;MACf;IACF,CAAC;IA7CC,IAAI,CAACJ,KAAK,GAAG;MACXH,MAAM,EAAE,CACN,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,CACR;MAAE;MACHC,UAAU,EAAE,CAAC;MAAE;MACfC,UAAU,EAAE,EAAE,CAAE;IAClB,CAAC;EACH;EAgCAQ,MAAMA,CAAA,EAAG;IACP,oBACEhB,OAAA;MAAKiB,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpB,IAAI,CAACT,KAAK,CAACH,MAAM,CAACa,GAAG,CAAC,CAACC,KAAK,EAAEf,KAAK,kBAClCL,OAAA;QAEEiB,SAAS,EAAC,KAAK;QACfI,KAAK,EAAE;UAAEC,eAAe,EAAEF;QAAM,CAAE;QAClCG,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACnB,cAAc,CAACC,KAAK;MAAE,GAHrCA,KAAK;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEA,eAAe1B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}