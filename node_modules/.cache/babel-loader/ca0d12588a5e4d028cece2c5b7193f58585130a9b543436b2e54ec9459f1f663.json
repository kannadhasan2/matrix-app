{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/matrix-3x3-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      colors: [\"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\", \"white\"],\n      clickCount: 0,\n      clickOrder: []\n    };\n    this.handleBoxClick = index => {\n      const {\n        colors,\n        clickCount,\n        clickOrder\n      } = this.state;\n      if (colors[index] === \"white\") {\n        colors[index] = \"green\";\n        clickOrder.push(index);\n        this.setState({\n          colors: colors,\n          clickCount: clickCount + 1\n        });\n        if (clickCount + 1 === 9) {\n          this.changeAllBoxesToOrange();\n        }\n      }\n    };\n    this.changeAllBoxesToOrange = () => {\n      const {\n        colors,\n        clickOrder\n      } = this.state;\n      for (let i = 0; i < clickOrder.length; i++) {\n        const index = clickOrder[i];\n        setTimeout(() => {\n          colors[index] = \"orange\";\n          this.setState({\n            colors: colors\n          });\n        }, i * 500);\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matrix\",\n      children: this.state.colors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        style: {\n          backgroundColor: color\n        },\n        onClick: () => this.handleBoxClick(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","App","constructor","args","state","colors","clickCount","clickOrder","handleBoxClick","index","push","setState","changeAllBoxesToOrange","i","length","setTimeout","render","className","children","map","color","style","backgroundColor","onClick","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/workspace/reactjs/coding-practices/matrix-3x3-app/src/App.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    colors: [\n      \"white\",\n      \"white\",\n      \"white\",\n      \"white\",\n      \"white\",\n      \"white\",\n      \"white\",\n      \"white\",\n      \"white\",\n    ],\n    clickCount: 0,\n    clickOrder: [],\n  };\n\n  handleBoxClick = (index) => {\n    const { colors, clickCount, clickOrder } = this.state;\n\n    if (colors[index] === \"white\") {\n      colors[index] = \"green\";\n      clickOrder.push(index);\n\n      this.setState({\n        colors: colors,\n        clickCount: clickCount + 1,\n      });\n\n      if (clickCount + 1 === 9) {\n        this.changeAllBoxesToOrange();\n      }\n    }\n  };\n\n  changeAllBoxesToOrange = () => {\n    const { colors, clickOrder } = this.state;\n\n    for (let i = 0; i < clickOrder.length; i++) {\n      const index = clickOrder[i];\n      setTimeout(() => {\n        colors[index] = \"orange\";\n        this.setState({ colors: colors });\n      }, i * 500);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"matrix\">\n        {this.state.colors.map((color, index) => (\n          <div\n            key={index}\n            className=\"box\"\n            style={{ backgroundColor: color }}\n            onClick={() => this.handleBoxClick(index)}\n          ></div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,SAASH,SAAS,CAAC;EAAAI,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC1BC,KAAK,GAAG;MACNC,MAAM,EAAE,CACN,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,EACP,OAAO,CACR;MACDC,UAAU,EAAE,CAAC;MACbC,UAAU,EAAE;IACd,CAAC;IAAA,KAEDC,cAAc,GAAIC,KAAK,IAAK;MAC1B,MAAM;QAAEJ,MAAM;QAAEC,UAAU;QAAEC;MAAW,CAAC,GAAG,IAAI,CAACH,KAAK;MAErD,IAAIC,MAAM,CAACI,KAAK,CAAC,KAAK,OAAO,EAAE;QAC7BJ,MAAM,CAACI,KAAK,CAAC,GAAG,OAAO;QACvBF,UAAU,CAACG,IAAI,CAACD,KAAK,CAAC;QAEtB,IAAI,CAACE,QAAQ,CAAC;UACZN,MAAM,EAAEA,MAAM;UACdC,UAAU,EAAEA,UAAU,GAAG;QAC3B,CAAC,CAAC;QAEF,IAAIA,UAAU,GAAG,CAAC,KAAK,CAAC,EAAE;UACxB,IAAI,CAACM,sBAAsB,CAAC,CAAC;QAC/B;MACF;IACF,CAAC;IAAA,KAEDA,sBAAsB,GAAG,MAAM;MAC7B,MAAM;QAAEP,MAAM;QAAEE;MAAW,CAAC,GAAG,IAAI,CAACH,KAAK;MAEzC,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,UAAU,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;QAC1C,MAAMJ,KAAK,GAAGF,UAAU,CAACM,CAAC,CAAC;QAC3BE,UAAU,CAAC,MAAM;UACfV,MAAM,CAACI,KAAK,CAAC,GAAG,QAAQ;UACxB,IAAI,CAACE,QAAQ,CAAC;YAAEN,MAAM,EAAEA;UAAO,CAAC,CAAC;QACnC,CAAC,EAAEQ,CAAC,GAAG,GAAG,CAAC;MACb;IACF,CAAC;EAAA;EAEDG,MAAMA,CAAA,EAAG;IACP,oBACEhB,OAAA;MAAKiB,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpB,IAAI,CAACd,KAAK,CAACC,MAAM,CAACc,GAAG,CAAC,CAACC,KAAK,EAAEX,KAAK,kBAClCT,OAAA;QAEEiB,SAAS,EAAC,KAAK;QACfI,KAAK,EAAE;UAAEC,eAAe,EAAEF;QAAM,CAAE;QAClCG,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACf,cAAc,CAACC,KAAK;MAAE,GAHrCA,KAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV;AACF;AAEA,eAAe1B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}